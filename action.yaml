name: Create Release
description: Create Github Release
inputs:
  tag:
    description: Tag to create release
    required: true
    default: ${{ github.ref_name }}
  generate-notes:
    description: Automatically generate release notes
    required: true
    default: true
  generate-notes-since:
    description: Base tag to generate release notes as a base
    required: false
  prerelease:
    description: Mark release as prerelease
    required: false
    default: false
  files:
    description: Files to attach to the release
    required: false
  discussion-category:
    description: Github Discussion category
    required: false
  token:
    description: Github Token
    required: true
    default: ${{ github.token }}
  repository:
    description: Repository to create the release for
    required: true
    default: ${{ github.repository }}
runs:
  using: composite
  steps:
  - shell: bash
    env:
      GITHUB_TOKEN: ${{ inputs.token }}
      GH_REPO: ${{ inputs.repository }}
      PRERELEASE: ${{ inputs.prerelease }}
      GENERATE_NOTES: ${{ inputs.generate-notes }}
      DISCUSSION_CATEGORY: ${{ inputs.discussion-category }}
      PREVIOUS_TAG_NAME: ${{ inputs.generate-notes-since }}
    run: |
      TRUE=(true t 1)
      TITLE=
      NOTES_FILE=$(mktemp --tmpdir --suffix .md body.XXXXXXXXXX)

      if [[ "${TRUE[*]}" =~ "$GENERATE_NOTES" ]]; then
        OPTS=()
        [[ "$PREVIOUS_TAG_NAME" =~ .+ ]] && OPTS+=(-f previous_tag_name=$PREVIOUS_TAG_NAME)

        results=$(
          gh api repos/swaglive/swag-server/releases/generate-notes \
            -f tag_name=${{ inputs.tag }} \
            ${OPTS[@]}
        )
        TITLE=$(echo $results | jq -r '.name')
        echo $results | jq -r '.body' >> $NOTES_FILE
      fi

      OPTS=()
      [[ "${TRUE[*]}" =~ "$PRERELEASE" ]] && OPTS+=(--prerelease)
      [[ "$DISCUSSION_CATEGORY" =~ .+ ]] && OPTS+=(--discussion-category $DISCUSSION_CATEGORY)
      [[ "$TITLE" =~ .+ ]] && OPTS+=(--title $TITLE)
      [[ "$NOTES_FILE" =~ .+ ]] && OPTS+=(--notes-file $NOTES_FILE)

      gh release create ${{ inputs.tag }} ${OPTS[@]}

      echo "::group::Release Notes"
      cat $NOTES_FILE
      echo "::endgroup::"
  - shell: bash
    if: ${{ inputs.files }}
    env:
      GITHUB_TOKEN: ${{ inputs.token }}
      GH_REPO: ${{ inputs.repository }}
    run: |
      # BUG: https://github.com/cli/cli/issues/4993
      gh release upload ${{ inputs.tag }} --clobber ${{ inputs.files }}
